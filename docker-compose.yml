# Docker Compose Version
version: "3.8"
services:
  # Containers
  # You can name the containers
  # By default when you use docker compose, when you bring your services down, the containers are removed

# Backend
  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    depends_on:
        - postgres
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/local
      SECRET: only-for-dev
      GOOGLE_ID: ${GOOGLE_ID}
      GOOGLE_SECRET: ${GOOGLE_SECRET}
      NEXTAUTH_URL: http://localhost:3000/
    ports:
        - 4000:4000
    volumes:
        - ./backend/:/pulse/backend/:ro

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - backend

    ports:
      - "3000:3000"
    volumes:
      - ./frontend/:/frontend/:ro

    # Everything in this docker compose file will be in the same network by default. Docker will automatically create a new environment for all the services specified here and add them to the network

  postgres:
    # image: postgres:13.1-alpine is referring to the version of Postgres, alpine is the smaller subset of Linux, more secure, but a lot less functionality than a full Linux docker image
    image: postgres:14
    environment:
      POSTGRES_DB: local
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
        - ./postgres_data/:/var/lib/postgresql/data